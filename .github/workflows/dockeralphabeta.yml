name: Publish Version ALPHA or BETA Docker-Image to GHRC.io
# Only trigger on semver shaped tags.
on:
  push:
    tags:
      - "v*-alpha"
      - "v*-beta"

jobs:
  GHRC:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Print environment variables
        run: |
          echo "CI_REF_NAME=$CI_REF_NAME"

      - name: Prepare GHRC
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY}
          VERSION=$CI_REF_NAME
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=title::${GITHUB_REPOSITORY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=source::https://github.com/${GITHUB_REPOSITORY}
          echo ::set-output name=maintainer::${{ github.repository_owner }}
          echo ::set-output name=imagesource::linuxserver.io-alpine

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GHRC Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push GHRC
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.date }}
            org.opencontainers.image.source=${{ steps.prep.outputs.source }}
            org.opencontainers.image.maintainer=${{ steps.prep.outputs.maintainer }}
            org.opencontainers.image.imagesource=${{ steps.prep.outputs.imagesource }}
